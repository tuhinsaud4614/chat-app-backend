{
  "apiVersion": "1.0.0",
  "swagger": "2.0",
  "title": "Chat App",
  "info": {
    "title": "Chat App REST API",
    "description": "This is a Chat App <b>Backend</b> server"
  },
  "schemes": ["http", "https"],
  "tags": [
    {
      "name": "User",
      "description": "Users can control their accounts."
    }
  ],
  "paths": {
    "/api/v1/user/create": {
      "post": {
        "tags": ["User"],
        "summary": "Create the new user.",
        "description": "This route will register an account and return user id when its created successfully.",
        "consumes": "application/json",
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "description": "User data to register an account",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                }
              },
              "required": ["email", "password", "confirmPassword"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation.",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": { "type": "string" }
                      }
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict with requirement",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/verify/{id}/{verificationCode}": {
      "get": {
        "tags": ["User"],
        "summary": "Verify the new user.",
        "description": "This will verify the new user.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user id of a new user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "verificationCode",
            "description": "The verification code of new user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict with requirement",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/resend-verification-code/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Resend the verification code.",
        "description": "This will resend the verification code.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user id of newly created user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict with requirement",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/forget-password": {
      "post": {
        "tags": ["User"],
        "summary": "Forgot password.",
        "description": "This will send a code to reset password through email.",
        "consumes": "application/json",
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "The user email who already verified",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/verify-reset-password/{id}/{verificationCode}": {
      "get": {
        "tags": ["User"],
        "summary": "Verify the code to reset password.",
        "description": "This will verify the code send through email to reset password.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "verificationCode",
            "description": "The reset password verification code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict with requirement",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/v1/user/reset-password/{id}/{verifiedCode}": {
      "post": {
        "tags": ["User"],
        "summary": "Set the new password.",
        "description": "This will set a new password for the existed user.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The user id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "verifiedCode",
            "description": "The verified code to set new password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "New password",
            "description": "New password for the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newPassword": {
                  "type": "string"
                },
                "confirmPassword": {
                  "type": "string"
                }
              },
              "required": ["newPassword", "confirmPassword"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "allOf": [
                { "$ref": "#/definitions/Success" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict with requirement",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "Invalid inputs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "firstName": { "type": "string", "default": null },
        "lastName": { "type": "string", "default": null },
        "email": { "type": "string" },
        "avatar": { "type": "string", "default": null }
      }
    },

    "Error": {
      "type": "object",
      "properties": {
        "detail": { "type": "string", "default": null },
        "message": { "type": "string" },
        "error": { "type": "string" },
        "success": { "type": "boolean", "default": false },
        "timeStamp": { "type": "string", "format": "date-time" }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string",
          "default": null
        },
        "message": { "type": "string" },
        "success": { "type": "boolean", "default": true },
        "timeStamp": { "type": "string", "format": "date-time" }
      }
    }
  }
}
